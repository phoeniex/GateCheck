//
//  LoginViewController.swift
//  Gate Check
//
//  Created by Rawipon Srivibha on 17/12/18.
//  Copyright (c) 2018 Allianz Technology. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Material
import IQKeyboardManagerSwift
import SVProgressHUD

protocol LoginDisplayLogic: class {
  func displayLoginSuccess(_ viewModel: Login.Login.ViewModel)
  func displayLoginFailure(_ viewModel: Login.Login.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic {
  var interactor: LoginBusinessLogic?
  var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
  
  @IBOutlet weak var endpointTextField: TextField!
  @IBOutlet weak var usernameTextField: TextField!
  @IBOutlet weak var passwordTextField: TextField!

  // MARK: Object Lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }

  // MARK: View Lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    
    setupUIComponents()
  }
  
  @IBAction func textFieldCompleteEdited(sender: UITextField!) {
    if IQKeyboardManager.shared.canGoNext {
      IQKeyboardManager.shared.goNext()
    } else {
      login()
    }
  }
  
  @IBAction func tapOnLogin(sender: UIButton!) {
    login()
  }
  
  // MARK: - Request Functions
  func login() {
    SVProgressHUD.show()
    interactor?.login(Login.Login.Request(endpoint: endpointTextField.text,
                                          username: usernameTextField.text,
                                          password: passwordTextField.text))
  }
  
  // MARK: - Display Functions
  func displayLoginSuccess(_ viewModel: Login.Login.ViewModel) {
    SVProgressHUD.dismiss()
    router?.navigateToMain()
  }
  
  func displayLoginFailure(_ viewModel: Login.Login.ViewModel) {
    SVProgressHUD.dismiss()
    guard let error = viewModel.error else { return }
    
    let alert = UIAlertController(errorAlert: error)
    present(alert, animated: true, completion: nil)
  }
  
  func setupUIComponents() {
    endpointTextField.dividerActiveColor = #colorLiteral(red: 0, green: 0.3607843137, blue: 0.5647058824, alpha: 1)
    endpointTextField.dividerNormalColor = #colorLiteral(red: 0, green: 0.3607843137, blue: 0.5647058824, alpha: 1)
    endpointTextField.placeholderActiveColor = #colorLiteral(red: 0.6078431373, green: 0.6078431373, blue: 0.6078431373, alpha: 1)
    usernameTextField.dividerActiveColor = #colorLiteral(red: 0, green: 0.3607843137, blue: 0.5647058824, alpha: 1)
    usernameTextField.dividerNormalColor = #colorLiteral(red: 0, green: 0.3607843137, blue: 0.5647058824, alpha: 1)
    usernameTextField.placeholderActiveColor = #colorLiteral(red: 0.6078431373, green: 0.6078431373, blue: 0.6078431373, alpha: 1)
    passwordTextField.dividerActiveColor = #colorLiteral(red: 0, green: 0.3607843137, blue: 0.5647058824, alpha: 1)
    passwordTextField.dividerNormalColor = #colorLiteral(red: 0, green: 0.3607843137, blue: 0.5647058824, alpha: 1)
    passwordTextField.placeholderActiveColor = #colorLiteral(red: 0.6078431373, green: 0.6078431373, blue: 0.6078431373, alpha: 1)
    
    endpointTextField.text = "https://wwwpng.000webhostapp.com/gate_check"
    usernameTextField.text = "User"
    passwordTextField.text = "pass1234word"
  }
  
}

// MARK: - Setup, Routing

extension LoginViewController {
  
  fileprivate func setup() {
    let viewController = self
    let interactor = LoginInteractor()
    let presenter = LoginPresenter()
    let router = LoginRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
}
