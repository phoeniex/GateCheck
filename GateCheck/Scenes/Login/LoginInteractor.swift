//
//  LoginInteractor.swift
//  Gate Check
//
//  Created by Rawipon Srivibha on 17/12/18.
//  Copyright (c) 2018 Allianz Technology. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftRuler

protocol LoginBusinessLogic {
  func login(_ request: Login.Login.Request)
}

protocol LoginDataStore: class {
  
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
  var presenter: LoginPresentationLogic?
  
  lazy var apiWorker = GateCheckApiWorker()
  
  // MARK: - Business Functions
  func login(_ request: Login.Login.Request) {
    if let error = validateInputData(request) {
      presenter?.presentLogin(Login.Login.Response(error: error))
      return
    }
    
    apiWorker.endpoint = request.endpoint ?? ""
    apiWorker.login(username: request.username ?? "", password: request.password ?? "") { [weak self] (result) in
      let error: Login.Login.Response.ResponseError? = result.error != nil ? .webService : nil
      self?.presenter?.presentLogin(Login.Login.Response(error: error))
    }
  }
  
  // MARK: - Privates
  func validateInputData(_ request: Login.Login.Request) -> Login.Login.Response.ResponseError? {
    let ruler = Ruler()
    let urlRegexRule = try! RegexRule(pattern: "https?://(?:www\\.)?\\S+(?:/|\\b)")
    ruler.add(rule: ConnectToInternetRule(), userInfo: Login.Login.Response.ResponseError.noInternet)
    ruler.add(request.endpoint, rule: EmptyStringRule(), userInfo: Login.Login.Response.ResponseError.missingInformation)
    ruler.add(request.endpoint, rule: urlRegexRule, userInfo:
      Login.Login.Response.ResponseError.invalidEndpoint)
    ruler.add(request.username, rule: EmptyStringRule(), userInfo: Login.Login.Response.ResponseError.missingInformation)
    ruler.add(request.password, rule: EmptyStringRule(), userInfo: Login.Login.Response.ResponseError.missingInformation)
    return ruler.validate()?.userInfo as? Login.Login.Response.ResponseError
  }
  
}
